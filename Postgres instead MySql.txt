PostgreSQL || MySQL

> Transações a nível de tabela:
    Transações são extremamente úteis para uma série de tarefas, como por
    exemplo, executar queries perigosas (apagando registros por exemplo)
    diretamente no console do SGBD.

    O MySQL no entato NÃO oferece transações a nível de tabela.
        BEGIN;
        CREATE TABLE users (name varchar(255));
        ROLLBACK;
    Ao rodar as queries acima, seria esperado que a tabela users fosse criada e
    então apagada, porém ao dar o comando SHOW TABLES; Ela permanece.

    No Post:
        BEGIN;
        CREATE TABLE users (name character varying);
        ROLLBACK;
    Ao rodar, dando o comando \d, vemos que a tabela foi completamente removida

> Funcionalidades:
    Full-text search: Não é só melhor que a do MySQL como já foi incluída muito
    tempo antes;
    UUID: Geração nativa de campos UUID é uma funcionalidade exclusiva do
    PostgreSQL, a qual pode inclusive ser usada como chave-primária.

> Encoding padrão:
    O tipo de codificação padrão do PostgreSQL é o UTF-8. Simples assim!

    Já o do MySQL é latin1, o qual simplesmente não é preparado para
    funcionar em qualquer canto do mundo (enquanto que o UTF-8 é).
    Além disso, você pode ter tabelas com diferentes encodings, o
    que na minha opinião é um tanto confuso.

> Tipos de dados (colunas):
    A maioria dos tipos de colunas são mais amigáveis e consistentes no
    PostgreSQL que no MySQL.
    Exemplo: Um dado booleano é guardado como boolean no Post e (por falta de
    algo mais apropriado) guardado como tinyint(1) no MySQL.
        >> O tipo tinyint, a princípio, guarda um valor inteiro de 1 dígito.
        Para guardar um booleano nesse tipo de campo, usamos 1 ou 0, o que é
        popularmente conhecido como "gambiarra".

> Comunidade e licenças:
    Depois que o MySQL foi comprado pela Oracle, foi criado um fork do projeto,
    chamado MariaDB, o qual no começo se comprometia a ser compatível com o
    MySQL, porém totalmente livre em termos de licença. Infelizmente, ele
    já não é 100% compatível com o MySQL, o que talvez seja um problema
    para algumas empresas ou desenvolvedores (ou não).

    Já o Post, sempre foi open-source e apesar de ter uma licença própria, ela
    é muito parecida com as licenças BSD e MIT.

> Preços:
    A versão completa do MySQL não é gratuita.
    O PostgreSQL por sua vez oferece todas as suas Funcionalidades pelo mesmo
    preço: zero!
